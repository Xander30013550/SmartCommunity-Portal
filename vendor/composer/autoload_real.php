<?php

// autoload_real.php @generated by Composer

class ComposerAutoloaderInitaf8e75d4eed5cb940fa06cf38cb747a6 {
    private static $loader;

    //  This function checks if the given class name is `Composer\Autoload\ClassLoader` and, 
    // if so, includes the corresponding `ClassLoader.php` file from the current directory. 
    // It ensures that the `ClassLoader` class is loaded only when needed.
    public static function loadClassLoader($class) {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    /**
     * @return \Composer\Autoload\ClassLoader
     */
    //  This function initializes and returns a singleton instance of the Composer class loader, 
    //  registering it with PHP's autoload system to handle class loading automatically. 
    //  It temporarily registers a loader callback to include the class loader, sets up static
    //  autoload mappings, activates the loader, and then returns the loader instance.
    public static function getLoader(){
        if (null !== self::$loader) {
            return self::$loader;
        }

        spl_autoload_register(array('ComposerAutoloaderInitaf8e75d4eed5cb940fa06cf38cb747a6', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader(\dirname(__DIR__));
        spl_autoload_unregister(array('ComposerAutoloaderInitaf8e75d4eed5cb940fa06cf38cb747a6', 'loadClassLoader'));

        require __DIR__ . '/autoload_static.php';
        call_user_func(\Composer\Autoload\ComposerStaticInitaf8e75d4eed5cb940fa06cf38cb747a6::getInitializer($loader));

        $loader->register(true);

        return $loader;
    }
}